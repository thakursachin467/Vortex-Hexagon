const MongoClient = require('mongodb').MongoClient;
const {Writable} = require('stream');

module.exports = MongoDriver;

function MongoDriver() {}

MongoDriver.prototype.connect = function(url) {
  return MongoClient.connect(url)
    .then(db => {
      // if (db) logger.info(connected)
      this._db = db;
    })
    .catch(err => console.log(err));
};

MongoDriver.prototype._getCollection = function(collection) {
  return this._db.collection(collection);
};

MongoDriver.prototype.update = function(collection, filter, record, options={}) {
  return this._getCollection(collection)
    .updateOne(filter,record,options);
};

MongoDriver.prototype.find = function (collection,query={},options={}) {
  return this._getCollection(collection)
    .find(query, options);
};

MongoDriver.prototype.createWriteStream = function(collection, options){
  return new Writable({
    objectMode:true,
    write: (chunk,encoding,callback) => {
      this.update(
        collection,
        { id: chunk.id },
        chunk,
        Object.assign({},{w:0,j:false},options)
      )
        .then(()=>{
          callback(null);
        })
        .catch(err=>callback(err));
    }
  });
};

MongoDriver.prototype.dropCollection = function(collection){
  return this._getCollection(collection).drop();
}

MongoDriver.prototype.disconnect = function() {
  return this._db.close()
    .then(() => {
      // logger.info(disconnected);
      // return;
      return true;
    });
};

